version: "3.8"
services:
  spark-master:
    image: spark-server:1.0
    build:
      context: .
    container_name: spark-master
    hostname: spark-master
    networks:
      - spark-network
    ports:
      - "8080:8080"
      - "7077:7077"
      - "8998:8998"
      - "6066:6066"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./data/inputs:/data/inputs
      - ./data/outputs:/data/outputs
      - ./jobs:/jobs
      - ./logs:/logs
    environment:
      - SPARK_WORKLOAD=master
      - SPARK_USER=spark
      - SPARK_LOG_DIR=/logs/spark

  spark-worker:
    image: spark-server:1.0 
    container_name: spark-worker
    hostname: spark-worker
    networks:
      - spark-network
    ports:
      - "8081:8081"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKLOAD=worker
      - SPARK_WORKER_MEMORY=100G
      - SPARK_WORKER_CORES=10
      - SPARK_USER=spark
      - SPARK_LOG_DIR=/logs/spark
      - SPARK_WORKER_DIR=/logs/worker
    volumes:
      - ./data/inputs:/data/inputs
      - ./data/outputs:/data/outputs
      - ./jobs:/jobs
      - ./logs:/logs 
    depends_on:
      - spark-master 

  spark-history:
    container_name: spark-history
    hostname: spark-history
    image: spark-server:1.0
    networks:
      - spark-network
    ports:
      - '18080:18080'
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKLOAD=history
      - SPARK_USER=spark
      - SPARK_LOG_DIR=/logs/spark
    volumes:
      - ./data/inputs:/data/inputs
      - ./data/outputs:/data/outputs
      - ./jobs:/jobs
      - ./logs:/logs
    depends_on:
      - spark-master
      - spark-worker

networks:
  spark-network:
    driver: bridge

#volumes:
#  spark-inputs:


